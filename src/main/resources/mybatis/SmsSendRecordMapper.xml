<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.py.dao.SmsSendRecordMapper">
  <resultMap id="BaseResultMap" type="com.py.entity.SmsSendRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, phone, send_time, code, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_sms_send_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from app_sms_send_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.py.entity.SmsSendRecord">
    insert into app_sms_send_record (id, phone, send_time, 
      code, is_delete)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{code,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.py.entity.SmsSendRecord">
    insert into app_sms_send_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.py.entity.SmsSendRecord">
    update app_sms_send_record
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.py.entity.SmsSendRecord">
    update app_sms_send_record
    set phone = #{phone,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据手机号查询最新的一条短信记录  -->
  <select id="selectByPhoneLast" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_sms_send_record
    where is_delete = 0 and phone = #{phone}
    order by id desc limit 0,1
  </select>
  
  
  
  
</mapper>